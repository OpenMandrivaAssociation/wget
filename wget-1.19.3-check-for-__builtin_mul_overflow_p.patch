diff -Naur wget-1.19.3/configure.ac wget-1.19.3.tpg/configure.ac
--- wget-1.19.3/configure.ac	2018-01-14 10:22:42.000000000 +0000
+++ wget-1.19.3.tpg/configure.ac	2018-02-09 00:24:39.160660783 +0000
@@ -164,6 +164,18 @@
 dnl Find the compiler
 dnl
 
+AC_CACHE_CHECK([for gcc 7-compatible __builtin_mul_overflow_p],
+  [utils_cv_builtin_mul_overflow_p],
+  [AC_COMPILE_IFELSE(
+    [AC_LANG_PROGRAM(
+      [[]],
+      [[return __builtin_mul_overflow_p(1, 2, 3);]])],
+    [utils_cv_builtin_mul_overflow_p=yes],
+    [utils_cv_builtin_mul_overflow_p=no])])
+if test $utils_cv_builtin_mul_overflow_p = yes; then
+  AC_DEFINE([HAVE_BUILTIN_MUL_OVERFLOW_P], [1], [Define if your compiler supports __builtin_mul_overflow_p])
+fi
+
 dnl We want these before the checks, so the checks can modify their values.
 test -z "$CFLAGS"  && CFLAGS= auto_cflags=1
 test -z "$CC" && cc_specified=yes
diff -Naur wget-1.19.3/lib/fnmatch.c wget-1.19.3.tpg/lib/fnmatch.c
--- wget-1.19.3/lib/fnmatch.c	2018-01-19 18:52:24.000000000 +0000
+++ wget-1.19.3.tpg/lib/fnmatch.c	2018-02-09 00:30:55.449677604 +0000
@@ -66,7 +66,7 @@
 #include "flexmember.h"
 
 #ifndef FALLTHROUGH
-# if __GNUC__ < 7
+# if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #  define FALLTHROUGH ((void) 0)
 # else
 #  define FALLTHROUGH __attribute__ ((__fallthrough__))
diff -Naur wget-1.19.3/lib/intprops.h wget-1.19.3.tpg/lib/intprops.h
--- wget-1.19.3/lib/intprops.h	2018-01-19 18:52:24.000000000 +0000
+++ wget-1.19.3.tpg/lib/intprops.h	2018-02-09 00:26:30.475661237 +0000
@@ -225,14 +225,11 @@
 # define _GL_HAS_BUILTIN_OVERFLOW 0
 #endif
 
-/* True if __builtin_add_overflow_p (A, B, C) works.  */
-#define _GL_HAS_BUILTIN_OVERFLOW_P (7 <= __GNUC__)
-
 /* The _GL*_OVERFLOW macros have the same restrictions as the
    *_RANGE_OVERFLOW macros, except that they do not assume that operands
    (e.g., A and B) have the same type as MIN and MAX.  Instead, they assume
    that the result (e.g., A + B) has that type.  */
-#if _GL_HAS_BUILTIN_OVERFLOW_P
+#ifdef HAVE_BUILTIN_MUL_OVERFLOW_P
 # define _GL_ADD_OVERFLOW(a, b, min, max)                               \
    __builtin_add_overflow_p (a, b, (__typeof__ ((a) + (b))) 0)
 # define _GL_SUBTRACT_OVERFLOW(a, b, min, max)                          \
@@ -318,7 +315,7 @@
   _GL_BINARY_OP_OVERFLOW (a, b, _GL_ADD_OVERFLOW)
 #define INT_SUBTRACT_OVERFLOW(a, b) \
   _GL_BINARY_OP_OVERFLOW (a, b, _GL_SUBTRACT_OVERFLOW)
-#if _GL_HAS_BUILTIN_OVERFLOW_P
+#ifdef HAVE_BUILTIN_MUL_OVERFLOW_P
 # define INT_NEGATE_OVERFLOW(a) INT_SUBTRACT_OVERFLOW (0, a)
 #else
 # define INT_NEGATE_OVERFLOW(a) \
diff -Naur wget-1.19.3/lib/mbrtowc.c wget-1.19.3.tpg/lib/mbrtowc.c
--- wget-1.19.3/lib/mbrtowc.c	2018-01-19 18:52:24.000000000 +0000
+++ wget-1.19.3.tpg/lib/mbrtowc.c	2018-02-09 00:31:13.894679360 +0000
@@ -36,7 +36,7 @@
 # include "verify.h"
 
 #ifndef FALLTHROUGH
-# if __GNUC__ < 7
+# if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #  define FALLTHROUGH ((void) 0)
 # else
 #  define FALLTHROUGH __attribute__ ((__fallthrough__))
diff -Naur wget-1.19.3/lib/quotearg.c wget-1.19.3.tpg/lib/quotearg.c
--- wget-1.19.3/lib/quotearg.c	2018-01-19 18:52:25.000000000 +0000
+++ wget-1.19.3.tpg/lib/quotearg.c	2018-02-09 00:31:34.283681377 +0000
@@ -55,7 +55,7 @@
 #define INT_BITS (sizeof (int) * CHAR_BIT)
 
 #ifndef FALLTHROUGH
-# if __GNUC__ < 7
+# if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #  define FALLTHROUGH ((void) 0)
 # else
 #  define FALLTHROUGH __attribute__ ((__fallthrough__))
diff -Naur wget-1.19.3/lib/regex_internal.h wget-1.19.3.tpg/lib/regex_internal.h
--- wget-1.19.3/lib/regex_internal.h	2018-01-19 18:52:25.000000000 +0000
+++ wget-1.19.3.tpg/lib/regex_internal.h	2018-02-09 00:32:09.530685047 +0000
@@ -896,7 +896,7 @@
 #endif
 
 #ifndef FALLTHROUGH
-# if __GNUC__ < 7
+# if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #  define FALLTHROUGH ((void) 0)
 # else
 #  define FALLTHROUGH __attribute__ ((__fallthrough__))
diff -Naur wget-1.19.3/lib/unistr/u8-uctomb-aux.c wget-1.19.3.tpg/lib/unistr/u8-uctomb-aux.c
--- wget-1.19.3/lib/unistr/u8-uctomb-aux.c	2018-01-19 18:52:25.000000000 +0000
+++ wget-1.19.3.tpg/lib/unistr/u8-uctomb-aux.c	2018-02-09 00:32:35.265687859 +0000
@@ -21,7 +21,7 @@
 #include "unistr.h"
 
 #ifndef FALLTHROUGH
-# if __GNUC__ < 7
+# if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #  define FALLTHROUGH ((void) 0)
 # else
 #  define FALLTHROUGH __attribute__ ((__fallthrough__))
diff -Naur wget-1.19.3/lib/vasnprintf.c wget-1.19.3.tpg/lib/vasnprintf.c
--- wget-1.19.3/lib/vasnprintf.c	2018-01-19 18:52:25.000000000 +0000
+++ wget-1.19.3.tpg/lib/vasnprintf.c	2018-02-09 00:33:03.442691069 +0000
@@ -119,7 +119,7 @@
 #endif
 
 #ifndef FALLTHROUGH
-# if __GNUC__ < 7
+# if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #  define FALLTHROUGH ((void) 0)
 # else
 #  define FALLTHROUGH __attribute__ ((__fallthrough__))
diff -Naur wget-1.19.3/lib/xalloc-oversized.h wget-1.19.3.tpg/lib/xalloc-oversized.h
--- wget-1.19.3/lib/xalloc-oversized.h	2018-01-19 18:52:25.000000000 +0000
+++ wget-1.19.3.tpg/lib/xalloc-oversized.h	2018-02-09 00:27:51.249664225 +0000
@@ -41,7 +41,7 @@
    positive and N must be nonnegative.  This is a macro, not a
    function, so that it works correctly even when SIZE_MAX < N.  */
 
-#if 7 <= __GNUC__
+#ifdef HAVE_BUILTIN_MUL_OVERFLOW_P
 # define xalloc_oversized(n, s) \
    __builtin_mul_overflow_p (n, s, (__xalloc_count_type) 1)
 #elif 5 <= __GNUC__ && !defined __ICC && !__STRICT_ANSI__
