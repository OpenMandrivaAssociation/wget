diff -up wget-1.20.2/configure.ac.4~ wget-1.20.2/configure.ac
--- wget-1.20.2/configure.ac.4~	2019-02-19 22:25:45.000000000 +0100
+++ wget-1.20.2/configure.ac	2019-04-01 23:14:52.438364253 +0200
@@ -189,6 +189,18 @@ dnl
 dnl Find the compiler
 dnl
 
+AC_CACHE_CHECK([for gcc 7-compatible __builtin_mul_overflow_p],
+  [utils_cv_builtin_mul_overflow_p],
+  [AC_COMPILE_IFELSE(
+    [AC_LANG_PROGRAM(
+      [[]],
+      [[return __builtin_mul_overflow_p(1, 2, 3);]])],
+    [utils_cv_builtin_mul_overflow_p=yes],
+    [utils_cv_builtin_mul_overflow_p=no])])
+if test $utils_cv_builtin_mul_overflow_p = yes; then
+  AC_DEFINE([HAVE_BUILTIN_MUL_OVERFLOW_P], [1], [Define if your compiler supports __builtin_mul_overflow_p])
+fi
+
 dnl We want these before the checks, so the checks can modify their values.
 test -z "$CFLAGS"  && CFLAGS= auto_cflags=1
 test -z "$CC" && cc_specified=yes
diff -up wget-1.20.2/lib/fnmatch.c.4~ wget-1.20.2/lib/fnmatch.c
--- wget-1.20.2/lib/fnmatch.c.4~	2019-04-01 20:26:22.000000000 +0200
+++ wget-1.20.2/lib/fnmatch.c	2019-04-01 23:14:52.438364253 +0200
@@ -66,7 +66,7 @@ extern int fnmatch (const char *pattern,
 #include "flexmember.h"
 
 #ifndef FALLTHROUGH
-# if __GNUC__ < 7
+# if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #  define FALLTHROUGH ((void) 0)
 # else
 #  define FALLTHROUGH __attribute__ ((__fallthrough__))
diff -up wget-1.20.2/lib/intprops.h.4~ wget-1.20.2/lib/intprops.h
--- wget-1.20.2/lib/intprops.h.4~	2019-04-01 20:26:22.000000000 +0200
+++ wget-1.20.2/lib/intprops.h	2019-04-01 23:14:52.438364253 +0200
@@ -227,14 +227,11 @@
 # define _GL_HAS_BUILTIN_OVERFLOW 0
 #endif
 
-/* True if __builtin_add_overflow_p (A, B, C) works.  */
-#define _GL_HAS_BUILTIN_OVERFLOW_P (7 <= __GNUC__)
-
 /* The _GL*_OVERFLOW macros have the same restrictions as the
    *_RANGE_OVERFLOW macros, except that they do not assume that operands
    (e.g., A and B) have the same type as MIN and MAX.  Instead, they assume
    that the result (e.g., A + B) has that type.  */
-#if _GL_HAS_BUILTIN_OVERFLOW_P
+#ifdef HAVE_BUILTIN_MUL_OVERFLOW_P
 # define _GL_ADD_OVERFLOW(a, b, min, max)                               \
    __builtin_add_overflow_p (a, b, (__typeof__ ((a) + (b))) 0)
 # define _GL_SUBTRACT_OVERFLOW(a, b, min, max)                          \
@@ -320,7 +317,7 @@
   _GL_BINARY_OP_OVERFLOW (a, b, _GL_ADD_OVERFLOW)
 #define INT_SUBTRACT_OVERFLOW(a, b) \
   _GL_BINARY_OP_OVERFLOW (a, b, _GL_SUBTRACT_OVERFLOW)
-#if _GL_HAS_BUILTIN_OVERFLOW_P
+#ifdef HAVE_BUILTIN_MUL_OVERFLOW_P
 # define INT_NEGATE_OVERFLOW(a) INT_SUBTRACT_OVERFLOW (0, a)
 #else
 # define INT_NEGATE_OVERFLOW(a) \
diff -up wget-1.20.2/lib/mbrtowc.c.4~ wget-1.20.2/lib/mbrtowc.c
--- wget-1.20.2/lib/mbrtowc.c.4~	2019-04-01 20:26:23.000000000 +0200
+++ wget-1.20.2/lib/mbrtowc.c	2019-04-01 23:14:52.438364253 +0200
@@ -36,7 +36,7 @@
 # include "verify.h"
 
 # ifndef FALLTHROUGH
-#  if __GNUC__ < 7
+#  if __GNUC__ < 7 || defined(__clang__)
 #   define FALLTHROUGH ((void) 0)
 #  else
 #   define FALLTHROUGH __attribute__ ((__fallthrough__))
diff -up wget-1.20.2/lib/quotearg.c.4~ wget-1.20.2/lib/quotearg.c
--- wget-1.20.2/lib/quotearg.c.4~	2019-04-01 20:26:23.000000000 +0200
+++ wget-1.20.2/lib/quotearg.c	2019-04-01 23:14:52.439364257 +0200
@@ -55,7 +55,7 @@
 #define INT_BITS (sizeof (int) * CHAR_BIT)
 
 #ifndef FALLTHROUGH
-# if __GNUC__ < 7
+# if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #  define FALLTHROUGH ((void) 0)
 # else
 #  define FALLTHROUGH __attribute__ ((__fallthrough__))
diff -up wget-1.20.2/lib/regex_internal.h.4~ wget-1.20.2/lib/regex_internal.h
--- wget-1.20.2/lib/regex_internal.h.4~	2019-04-01 23:14:52.439364257 +0200
+++ wget-1.20.2/lib/regex_internal.h	2019-04-01 23:17:00.890876217 +0200
@@ -864,7 +864,7 @@ re_string_elem_size_at (const re_string_
 #endif /* RE_ENABLE_I18N */
 
 #ifndef FALLTHROUGH
-# if __GNUC__ < 7
+# if __GNUC__ < 7 || defined(__clang__)
 #  define FALLTHROUGH ((void) 0)
 # else
 #  define FALLTHROUGH __attribute__ ((__fallthrough__))
diff -up wget-1.20.2/lib/unistr/u8-uctomb-aux.c.4~ wget-1.20.2/lib/unistr/u8-uctomb-aux.c
--- wget-1.20.2/lib/unistr/u8-uctomb-aux.c.4~	2019-04-01 20:26:24.000000000 +0200
+++ wget-1.20.2/lib/unistr/u8-uctomb-aux.c	2019-04-01 23:14:52.439364257 +0200
@@ -21,7 +21,7 @@
 #include "unistr.h"
 
 #ifndef FALLTHROUGH
-# if __GNUC__ < 7
+# if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #  define FALLTHROUGH ((void) 0)
 # else
 #  define FALLTHROUGH __attribute__ ((__fallthrough__))
diff -up wget-1.20.2/lib/vasnprintf.c.4~ wget-1.20.2/lib/vasnprintf.c
--- wget-1.20.2/lib/vasnprintf.c.4~	2019-04-01 20:26:24.000000000 +0200
+++ wget-1.20.2/lib/vasnprintf.c	2019-04-01 23:14:52.440364261 +0200
@@ -119,7 +119,7 @@
 #endif
 
 #ifndef FALLTHROUGH
-# if __GNUC__ < 7
+# if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #  define FALLTHROUGH ((void) 0)
 # else
 #  define FALLTHROUGH __attribute__ ((__fallthrough__))
diff -up wget-1.20.2/lib/xalloc-oversized.h.4~ wget-1.20.2/lib/xalloc-oversized.h
--- wget-1.20.2/lib/xalloc-oversized.h.4~	2019-04-01 20:26:24.000000000 +0200
+++ wget-1.20.2/lib/xalloc-oversized.h	2019-04-01 23:14:52.440364261 +0200
@@ -41,7 +41,7 @@ typedef size_t __xalloc_count_type;
    positive and N must be nonnegative.  This is a macro, not a
    function, so that it works correctly even when SIZE_MAX < N.  */
 
-#if 7 <= __GNUC__
+#ifdef HAVE_BUILTIN_MUL_OVERFLOW_P
 # define xalloc_oversized(n, s) \
    __builtin_mul_overflow_p (n, s, (__xalloc_count_type) 1)
 #elif 5 <= __GNUC__ && !defined __ICC && !__STRICT_ANSI__
